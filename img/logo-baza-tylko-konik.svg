<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="100mm"
   height="100mm"
   viewBox="0 0 100 100"
   version="1.1"
   id="svg5"
   inkscape:version="1.0.2 (e86c870879, 2021-01-15, custom)"
   sodipodi:docname="logo-baza-tylko-konik.svg">
  <metadata
     id="metadata881">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.4142137"
     inkscape:cx="199.75765"
     inkscape:cy="253.85131"
     inkscape:window-width="1920"
     inkscape:window-height="1177"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1"
     inkscape:showpageshadow="false"
     showborder="false"
     inkscape:document-rotation="0" />
  <defs
     id="defs2">
    <rect
       x="133.43399"
       y="468.04663"
       width="265.01916"
       height="81.726074"
       id="rect17582" />
    <linearGradient
       id="linearGradient4160"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#845b2c;stop-opacity:1;"
         offset="0"
         id="stop4158" />
    </linearGradient>
    <linearGradient
       id="linearGradient4140"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#eadd8e;stop-opacity:1;"
         offset="0"
         id="stop4138" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient12000"
       id="linearGradient11738"
       x1="87.661674"
       y1="39.697964"
       x2="87.897057"
       y2="73.493118"
       gradientUnits="userSpaceOnUse"
       spreadMethod="reflect"
       gradientTransform="matrix(1.5265197,0,0,1.4410118,-82.69858,-52.677656)" />
    <linearGradient
       inkscape:collect="always"
       id="linearGradient12000">
      <stop
         style="stop-color:#806600;stop-opacity:1"
         offset="0"
         id="stop11996" />
      <stop
         style="stop-color:#eded00;stop-opacity:0;"
         offset="1"
         id="stop11998" />
    </linearGradient>
  </defs>
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="koło"
     sodipodi:insensitive="true">
    <circle
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#806600;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none"
       id="path4296"
       cx="50"
       cy="50"
       r="50"
       inkscape:label="białe koło tła" />
    <circle
       style="display:inline;opacity:1;fill:#808080;fill-opacity:1;stroke:#806600;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="path9271"
       cx="50"
       cy="50"
       inkscape:label="szare koło"
       r="45.049999" />
    <ellipse
       style="opacity:1;fill:#808080;fill-opacity:0;stroke:url(#linearGradient11738);stroke-width:5.00001;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="path7295"
       cx="50.0005"
       cy="50.000298"
       inkscape:label="otok złoty"
       rx="47.500496"
       ry="47.500294" />
  </g>
  <g
     inkscape:label="konik"
     inkscape:groupmode="layer"
     id="layer1">
    <path
       style="fill:#ffffff;fill-opacity:1;stroke-width:0.233799"
       d="m 48.438712,84.468896 c -1.254468,-0.546396 -2.899971,-2.349598 -3.261108,-3.573244 -0.132919,-0.450561 -0.732456,-1.846201 -1.332034,-3.10145 -1.289434,-2.697157 -1.59653,-4.510063 -1.080894,-6.379 0.332546,-1.204345 0.272132,-1.520644 -0.516282,-2.681678 -0.490855,-0.723953 -0.996327,-1.736829 -1.122847,-2.250861 -0.126441,-0.514002 -0.598932,-1.424904 -1.049736,-2.024198 -2.032073,-2.702456 -3.281442,-9.937579 -2.829378,-16.383303 l 0.232067,-3.307773 -0.958165,-0.24044 c -0.928944,-0.23313 -1.290079,-1.068158 -0.636464,-1.471928 0.176753,-0.109276 0.428537,-0.912599 0.558883,-1.785303 0.172908,-1.150766 0.688599,-2.114338 1.877571,-3.50716 0.901592,-1.056268 1.9653,-2.55942 2.363324,-3.340356 l 0.724842,-1.41988 -0.893331,-2.250797 c -2.057504,-5.182351 -2.097553,-7.827952 -0.179305,-11.807114 1.813998,-3.76282 5.447054,-5.784729 5.670858,-3.15599 0.05084,0.599293 0.412645,2.560622 0.803035,4.358516 0.391021,1.797886 0.806842,3.886963 0.92512,4.642396 l 0.214267,1.373503 1.035746,-0.73789 c 1.322495,-0.94148 3.069076,-0.94148 4.390944,0 l 1.036373,0.73789 0.214287,-1.373503 c 0.11754,-0.755433 0.533434,-2.84451 0.924471,-4.642396 0.391021,-1.797894 0.752174,-3.759223 0.803036,-4.358516 0.223803,-2.628739 3.856861,-0.60683 5.67084,3.15599 1.918266,3.979162 1.878201,6.624763 -0.178655,11.807114 l -0.893332,2.250797 0.733731,1.439068 c 0.40375,0.791497 1.387364,2.193301 2.185314,3.115134 0.805567,0.931395 1.623867,2.358091 1.840685,3.21112 0.214267,0.844283 0.579858,1.91344 0.811942,2.375889 0.338883,0.675332 0.317908,0.906599 -0.106199,1.174866 -0.290557,0.183722 -0.713382,0.336532 -0.940365,0.339599 -0.291205,0.0044 -0.410739,1.741946 -0.40438,5.9077 0.0068,4.22562 -0.160163,6.600775 -0.583038,8.361561 -0.576698,2.39923 -1.67602,4.979762 -2.589052,6.076017 -0.249233,0.299656 -0.553152,0.965385 -0.674609,1.479387 -0.122075,0.514032 -0.623087,1.526908 -1.114585,2.250861 -0.78777,1.161034 -0.848811,1.477333 -0.516284,2.681678 0.513752,1.860673 0.211107,3.672509 -1.06626,6.379 -0.592571,1.255249 -1.274167,2.794257 -1.515785,3.420026 -0.530905,1.378856 -2.019358,2.855476 -3.405431,3.379244 -1.382264,0.522302 -3.819991,0.46356 -5.170467,-0.124639 z m 5.144393,-1.167722 c 0.682872,-0.323923 1.340294,-0.748858 1.460457,-0.944252 0.136758,-0.221237 -0.03808,-0.216659 -0.466679,0.01243 -1.132384,0.606041 -5.984944,0.465957 -7.028322,-0.202914 -0.868511,-0.556582 -0.884422,-0.552982 -0.363686,0.08182 1.298341,1.582186 4.256788,2.069284 6.39823,1.053231 z M 50.744822,81.27505 c 0.338885,-0.338992 0.532806,-0.338992 0.871692,0 1.168642,1.168922 3.438507,-0.0094 4.113745,-2.136559 0.121377,-0.383063 0.424729,-0.696473 0.674593,-0.696473 0.249251,0 0.846277,-0.694624 1.326949,-1.543642 1.065,-1.882832 1.174999,-4.940385 0.240346,-6.701329 -0.438722,-0.826071 -0.616119,-2.034594 -0.614197,-4.176908 0.0068,-4.552555 0.596398,-7.369273 2.358871,-11.221241 0.876791,-1.91677 1.7911,-4.26383 2.030797,-5.215701 0.429182,-1.70519 0.419647,-1.743173 -0.647888,-2.57842 -1.509431,-1.181353 -1.563486,-2.967185 -0.136758,-4.494932 1.068808,-1.143808 2.109637,-1.38543 3.277003,-0.760708 1.222665,0.65461 0.232696,-2.036164 -1.40261,-3.810133 -0.819576,-0.889118 -1.850865,-2.358725 -2.29149,-3.26578 -0.718483,-1.478478 -0.750899,-1.770488 -0.316004,-2.821195 2.835105,-6.850361 2.665986,-10.9154 -0.597675,-14.362978 -0.885054,-0.935341 -1.519594,-1.414696 -1.410225,-1.06522 0.490208,1.560769 0.656148,8.188148 0.253039,10.122294 -0.417723,2.005156 -1.228389,3.602022 -1.625766,3.204206 -0.111248,-0.111186 0.05729,-1.472241 0.373222,-3.024644 0.418353,-2.050312 0.502293,-3.584779 0.307726,-5.608658 l -0.268307,-2.786148 -0.468603,1.332192 c -0.258141,0.732704 -0.673962,2.898338 -0.924473,4.812536 -0.259415,1.984682 -0.623731,3.473982 -0.846907,3.465563 -0.214913,-0.0081 -0.956905,-0.498454 -1.648683,-1.089633 -1.590804,-1.359858 -2.79504,-1.359858 -4.385862,0 -0.691759,0.591179 -1.433122,1.081506 -1.648666,1.089633 -0.223174,0.0081 -0.586862,-1.480881 -0.846277,-3.465563 -0.250511,-1.914198 -0.666961,-4.079832 -0.925102,-4.812536 l -0.469239,-1.332192 -0.274036,2.491764 c -0.247975,2.250639 0.06671,5.583011 0.768052,8.132102 0.373868,1.359445 -0.565239,0.946037 -1.237929,-0.544813 -0.474313,-1.052347 -0.611016,-2.394293 -0.600205,-5.902139 0.0068,-2.497068 0.130293,-5.030454 0.273391,-5.629744 0.251783,-1.055257 0.209831,-1.035966 -1.324401,0.611 -3.251558,3.49076 -3.411158,7.501994 -0.571598,14.362978 0.434895,1.050707 0.401832,1.342717 -0.316006,2.821195 -0.440623,0.907055 -1.471914,2.376662 -2.291471,3.26578 -1.635324,1.773969 -2.625938,4.464743 -1.40261,3.810133 1.167349,-0.624722 2.208178,-0.3831 3.276357,0.760708 1.427413,1.527747 1.372727,3.313579 -0.136756,4.494932 -1.066907,0.835247 -1.076442,0.87323 -0.64726,2.57842 0.2397,0.951871 1.153379,3.298931 2.030799,5.215701 1.755487,3.83728 2.354435,6.669538 2.358871,11.157037 0,2.218642 -0.187563,3.38094 -0.76552,4.686792 -0.577952,1.307349 -0.713381,2.136073 -0.546166,3.353396 0.254963,1.860608 1.586368,4.445895 2.289585,4.445895 0.262578,0 0.477492,0.188883 0.477492,0.419735 0,0.230847 0.417096,0.966347 0.926379,1.634432 0.978527,1.283011 2.501947,1.636207 3.359664,0.778865 z m -4.580427,-3.932648 c -0.930202,-0.998287 -1.69509,-3.594042 -1.203611,-4.085241 0.25624,-0.25624 0.493405,-0.07084 0.75408,0.589492 0.209185,0.529806 0.551897,1.396757 0.761082,1.926556 0.27276,0.689161 0.492111,0.851766 0.772521,0.571395 0.58749,-0.58729 0.06359,-2.106799 -1.15783,-3.355914 -0.596399,-0.610227 -1.084702,-1.217491 -1.084702,-1.349482 0,-0.132081 0.416467,-0.674826 0.925747,-1.206254 0.875516,-0.913961 0.937187,-1.23939 1.136838,-6.012829 0.23526,-5.63993 -0.339516,-10.701358 -1.896644,-16.693358 -1.04972,-4.041026 -1.02429,-3.789628 -0.387214,-3.789628 0.618023,0 1.850239,4.357233 2.824942,9.988261 0.519463,3.001231 0.671432,5.431844 0.610387,9.769036 -0.07825,5.533384 -0.118239,5.817601 -0.968345,6.827584 l -0.886973,1.053866 0.766792,0.815929 c 0.42155,0.448773 1.017948,1.462449 1.324418,2.252643 l 0.558235,1.436702 -0.173607,-1.41412 c -0.09537,-0.777767 -0.507378,-1.768963 -0.914308,-2.202657 -0.867883,-0.923595 -0.960713,-1.649759 -0.211717,-1.649759 0.643432,0 2.376038,2.85346 2.376038,3.912774 0,0.418915 -0.165922,1.198686 -0.368767,1.732819 -0.277862,0.730647 -0.483869,0.875993 -0.83229,0.586921 -0.340789,-0.282564 -0.579859,-0.196905 -0.9054,0.32372 -0.560787,0.89851 -0.961988,0.892234 -1.819708,-0.02843 z m 8.212211,0.02843 c -0.324915,-0.520627 -0.564613,-0.606276 -0.904773,-0.323721 -0.348423,0.289075 -0.554428,0.143717 -0.832291,-0.586917 -0.203456,-0.534123 -0.369396,-1.313888 -0.369396,-1.732803 0,-1.06624 1.734493,-3.912777 2.384301,-3.912777 0.464796,0 0.469879,-0.111326 0.03178,-0.817208 -0.852617,-1.386844 -0.789672,-11.174123 0.1055,-16.368998 0.947353,-5.496092 2.157944,-9.691274 2.797589,-9.691274 0.618004,0 0.644081,-0.243608 -0.403751,3.789619 -1.557115,5.992 -2.131887,11.053429 -1.896645,16.693359 0.199649,4.773445 0.261321,5.09888 1.136855,6.01284 0.509279,0.531422 0.925746,1.074245 0.925746,1.206241 0,0.13205 -0.488321,0.739276 -1.084702,1.349496 -1.220776,1.249111 -1.745321,2.768619 -1.157828,3.355914 0.280391,0.280359 0.499761,0.117773 0.772521,-0.5714 0.209185,-0.529803 0.551879,-1.396757 0.761064,-1.926558 0.260692,-0.660352 0.497856,-0.845732 0.754078,-0.589489 0.776328,0.776109 -1.099323,4.821645 -2.235528,4.821645 -0.190116,0 -0.544893,-0.318565 -0.788419,-0.707949 z m 0.867883,-4.995026 c 0.429809,-0.45754 0.674609,-0.939231 0.542988,-1.0704 -0.244781,-0.245132 -1.689363,1.376423 -2.129984,2.390755 -0.135359,0.312925 -0.246703,0.977544 -0.246703,1.476956 0,0.725284 0.106199,0.618884 0.526465,-0.528673 0.289285,-0.790186 0.877421,-1.811074 1.307234,-2.268638 z M 42.463308,42.665895 c 0,-0.299654 0.169066,-0.544805 0.375771,-0.544805 0.206636,0 0.712737,-0.572058 1.125383,-1.271241 0.412659,-0.69917 0.897138,-1.271226 1.077086,-1.271226 0.65297,0 0.305822,1.422756 -0.61294,2.51459 -1.00141,1.190506 -1.9653,1.471302 -1.9653,0.572682 z M 57.93208,42.093213 c -0.918745,-1.091834 -1.265263,-2.51459 -0.612923,-2.51459 0.179933,0 0.665074,0.572056 1.07707,1.271226 0.412643,0.699183 0.91939,1.271241 1.126043,1.271241 0.205989,0 0.375128,0.245151 0.375128,0.544805 0,0.89862 -0.963264,0.617824 -1.965318,-0.572682 z m -9.400538,-0.965036 c -0.08574,-0.153084 -0.270855,-0.768663 -0.410737,-1.367958 -0.140594,-0.59929 -0.754078,-1.716407 -1.363837,-2.482457 -0.737539,-0.927241 -0.98742,-1.514057 -0.745801,-1.755521 0.696844,-0.696969 3.353295,3.063256 3.353295,4.746887 0,0.754663 -0.563966,1.336689 -0.83292,0.859049 z m 4.697414,0.01445 c -0.422825,-0.422824 -0.241619,-1.57481 0.462227,-2.940529 0.973448,-1.888359 2.206921,-3.131462 2.658354,-2.679881 0.24162,0.241465 -0.01212,0.830001 -0.760436,1.760678 -0.618019,0.768868 -1.230313,1.930241 -1.360012,2.580805 -0.245426,1.226223 -0.599578,1.679401 -1.000133,1.278927 z m -9.650434,20.286247 c -0.277214,-2.265441 -0.698117,-3.7025 -1.604164,-5.469732 -1.203591,-2.349122 -2.651351,-6.325734 -2.885338,-7.926561 -0.06479,-0.444333 -0.249235,-0.934656 -0.410091,-1.089631 -0.160162,-0.154964 -0.212366,2.333331 -0.114418,5.529573 0.193293,6.347709 0.676516,8.61245 2.439633,11.441104 0.560158,0.898928 1.14129,2.043049 1.291337,2.542456 0.150024,0.499428 0.535355,1.258175 0.856444,1.686117 0.558883,0.746112 0.587492,0.687292 0.693035,-1.431243 0.05729,-1.215146 -0.05729,-3.592077 -0.266403,-5.282083 z m 16.489271,5.027209 c 0.148813,-0.499407 0.729277,-1.643528 1.289433,-2.542456 1.763119,-2.828654 2.245712,-5.093395 2.439634,-11.441104 0.09728,-3.196242 0.04452,-5.684542 -0.115101,-5.529573 -0.160161,0.154964 -0.345243,0.645298 -0.41011,1.089631 -0.233339,1.598689 -1.680453,5.576091 -2.880882,7.917925 -1.33013,2.595847 -1.91507,5.760084 -1.934787,10.463761 l -0.01212,2.682256 0.676512,-0.866194 c 0.371949,-0.476422 0.797954,-1.274818 0.946725,-1.774246 z M 40.850235,45.907833 c 0.680322,-0.551844 0.673335,-0.564686 -0.202827,-0.368176 -0.499116,0.112009 -1.040199,0.205833 -1.201688,0.208562 -0.161557,0.0031 -0.193291,0.168421 -0.06933,0.368182 0.311552,0.504228 0.654891,0.455619 1.47382,-0.208568 z m 22.134682,0.208568 c 0.123303,-0.199768 0.09221,-0.365442 -0.06933,-0.368182 -0.161557,-0.0031 -0.702572,-0.09651 -1.202333,-0.208562 -0.876145,-0.19651 -0.883149,-0.183668 -0.202811,0.368176 0.818928,0.664187 1.162895,0.712796 1.474448,0.208568 z M 40.604179,43.346193 c -0.995696,-1.059875 -2.136341,-1.141806 -2.136341,-0.153504 0,0.892255 0.892686,1.407909 2.052401,1.186154 l 0.893334,-0.170778 z m 23.288687,-0.148238 c 0,-0.999458 -1.139387,-0.912319 -2.150961,0.164512 l -0.825301,0.878138 0.852635,0.139941 c 1.180082,0.193707 2.123627,-0.331793 2.123627,-1.182601 z"
       id="path866"
       inkscape:transform-center-x="124.17424"
       inkscape:transform-center-y="-2.9602579" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
