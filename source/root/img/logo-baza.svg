<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="100mm"
   height="100mm"
   viewBox="0 0 100 100"
   version="1.1"
   id="svg5"
   inkscape:version="1.0.2 (e86c870879, 2021-01-15, custom)"
   sodipodi:docname="logo-baza.svg">
  <metadata
     id="metadata881">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.4142137"
     inkscape:cx="199.75765"
     inkscape:cy="253.85131"
     inkscape:window-width="1920"
     inkscape:window-height="1177"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer3"
     inkscape:showpageshadow="false"
     showborder="false"
     inkscape:document-rotation="0" />
  <defs
     id="defs2">
    <rect
       x="133.43399"
       y="468.04663"
       width="265.01916"
       height="81.726074"
       id="rect17582" />
    <linearGradient
       id="linearGradient4160"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#845b2c;stop-opacity:1;"
         offset="0"
         id="stop4158" />
    </linearGradient>
    <linearGradient
       id="linearGradient4140"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#eadd8e;stop-opacity:1;"
         offset="0"
         id="stop4138" />
    </linearGradient>
    <linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient12000"
       id="linearGradient11738"
       x1="87.661674"
       y1="39.697964"
       x2="87.897057"
       y2="73.493118"
       gradientUnits="userSpaceOnUse"
       spreadMethod="reflect"
       gradientTransform="matrix(1.5265197,0,0,1.4410118,-82.69858,-52.677656)" />
    <linearGradient
       inkscape:collect="always"
       id="linearGradient12000">
      <stop
         style="stop-color:#806600;stop-opacity:1"
         offset="0"
         id="stop11996" />
      <stop
         style="stop-color:#eded00;stop-opacity:0;"
         offset="1"
         id="stop11998" />
    </linearGradient>
  </defs>
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="koło"
     sodipodi:insensitive="true">
    <circle
       style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#806600;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none"
       id="path4296"
       cx="50"
       cy="50"
       r="50"
       inkscape:label="białe koło tła" />
    <circle
       style="display:inline;opacity:1;fill:#808080;fill-opacity:1;stroke:#806600;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="path9271"
       cx="50"
       cy="50"
       inkscape:label="szare koło"
       r="45.049999" />
    <ellipse
       style="opacity:1;fill:#808080;fill-opacity:0;stroke:url(#linearGradient11738);stroke-width:5.00001;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       id="path7295"
       cx="50.0005"
       cy="50.000298"
       inkscape:label="otok złoty"
       rx="47.500496"
       ry="47.500294" />
  </g>
  <g
     inkscape:label="konik"
     inkscape:groupmode="layer"
     id="layer1"
     sodipodi:insensitive="true">
    <path
       style="fill:#ffffff;fill-opacity:1;stroke-width:0.233798"
       d="m 48.29558,54.148051 c -0.807498,-0.351714 -1.866705,-1.512431 -2.099168,-2.300089 -0.08556,-0.290025 -0.47148,-1.188396 -0.857427,-1.996397 -0.830006,-1.736154 -1.027683,-2.903117 -0.695769,-4.106148 0.214059,-0.775234 0.17517,-0.978835 -0.33233,-1.72619 -0.315962,-0.466007 -0.641333,-1.117993 -0.722774,-1.448874 -0.08139,-0.330862 -0.385531,-0.917208 -0.675713,-1.302972 -1.308041,-1.739565 -2.112257,-6.396798 -1.821264,-10.545896 l 0.149381,-2.129206 -0.616769,-0.154771 c -0.597959,-0.150065 -0.830421,-0.687571 -0.40969,-0.947477 0.113775,-0.07034 0.275848,-0.587438 0.359751,-1.149195 0.111301,-0.740746 0.44325,-1.360995 1.208589,-2.257551 0.580352,-0.679918 1.265059,-1.647493 1.521266,-2.15018 l 0.466579,-0.913974 -0.575035,-1.448833 c -1.324411,-3.335868 -1.35019,-5.038835 -0.115418,-7.600213 1.167666,-2.4221193 3.506257,-3.7236175 3.650319,-2.0315038 0.03272,0.3857638 0.265618,1.6482668 0.516912,2.8055668 0.251699,1.157296 0.519362,2.50203 0.595497,2.9883 l 0.137924,0.884121 0.666707,-0.474978 c 0.851287,-0.606029 1.975557,-0.606029 2.826441,0 l 0.667111,0.474978 0.137936,-0.884121 c 0.07566,-0.48627 0.34337,-1.831004 0.59508,-2.9883 0.251699,-1.1573 0.484173,-2.419803 0.516912,-2.8055668 0.144062,-1.6921137 2.482653,-0.3906155 3.650307,2.0315038 1.234784,2.561378 1.208994,4.264345 -0.114999,7.600213 l -0.575036,1.448833 0.472301,0.926325 c 0.259893,0.509485 0.893043,1.411823 1.406682,2.005205 0.518541,0.599537 1.045279,1.517898 1.184845,2.066991 0.137923,0.543463 0.373253,1.231677 0.522645,1.529354 0.218138,0.43471 0.204636,0.583576 -0.06836,0.756259 -0.187031,0.118261 -0.459203,0.216625 -0.605311,0.218599 -0.187448,0.0028 -0.264392,1.121287 -0.260299,3.802774 0.0044,2.720022 -0.103096,4.248904 -0.3753,5.382318 -0.371219,1.544379 -1.07885,3.205462 -1.666567,3.911119 -0.160431,0.192887 -0.356063,0.621416 -0.434244,0.952278 -0.07858,0.330881 -0.40108,0.982867 -0.717456,1.448874 -0.507086,0.747355 -0.546378,0.950956 -0.332331,1.72619 0.330701,1.197711 0.135889,2.363986 -0.686349,4.106148 -0.381437,0.808001 -0.820179,1.798657 -0.975708,2.201463 -0.341742,0.887567 -1.299856,1.838064 -2.192068,2.175212 -0.88976,0.336205 -2.45892,0.298393 -3.328218,-0.08023 z m 3.311435,-0.75166 c 0.439563,-0.208509 0.862744,-0.482038 0.940093,-0.607813 0.08803,-0.14241 -0.02451,-0.139463 -0.300401,0.008 -0.728913,0.390107 -3.852495,0.299936 -4.524115,-0.130615 -0.559059,-0.358271 -0.569301,-0.355954 -0.234104,0.05267 0.835739,1.01845 2.740085,1.331994 4.118527,0.677963 z m -1.826997,-1.304212 c 0.218139,-0.218208 0.342966,-0.218208 0.561106,0 0.752252,0.752433 2.21336,-0.0061 2.648009,-1.375298 0.07813,-0.246576 0.273397,-0.448318 0.434234,-0.448318 0.160442,0 0.544747,-0.447128 0.854154,-0.993639 0.685538,-1.211975 0.756344,-3.180115 0.15471,-4.313631 -0.282404,-0.53174 -0.396594,-1.309663 -0.395357,-2.688666 0.0044,-2.93047 0.3839,-4.743585 1.5184,-7.223088 0.564388,-1.233821 1.152927,-2.744618 1.30722,-3.357335 0.276263,-1.097627 0.270125,-1.122077 -0.417045,-1.659723 -0.971617,-0.760435 -1.006412,-1.909971 -0.08803,-2.893378 0.687989,-0.736267 1.357968,-0.891799 2.109399,-0.489666 0.787027,0.421371 0.149786,-1.310675 -0.902857,-2.452574 -0.527559,-0.572324 -1.191398,-1.518307 -1.475027,-2.102176 -0.462486,-0.951693 -0.483352,-1.139659 -0.203411,-1.815997 1.824951,-4.409562 1.716089,-7.026219 -0.384722,-9.245417 -0.569707,-0.602077 -0.978159,-0.910637 -0.907759,-0.68568 0.315546,1.004664 0.422361,5.270693 0.162881,6.515699 -0.268887,1.290714 -0.790711,2.318613 -1.046502,2.06254 -0.07161,-0.07157 0.03688,-0.947679 0.240242,-1.946957 0.269293,-1.319781 0.323325,-2.307514 0.198083,-3.610281 l -0.172709,-1.793437 -0.301639,0.857529 c -0.166165,0.47164 -0.433827,1.865654 -0.595081,3.097819 -0.166985,1.277535 -0.401494,2.236194 -0.545152,2.230775 -0.138339,-0.0052 -0.615958,-0.320854 -1.061254,-0.701394 -1.023997,-0.875338 -1.799161,-0.875338 -2.823169,0 -0.445284,0.38054 -0.922498,0.696163 -1.061243,0.701394 -0.143657,0.0052 -0.377762,-0.95324 -0.544747,-2.230775 -0.161253,-1.232165 -0.429321,-2.626179 -0.595486,-3.097819 L 46.145218,11.575157 45.968822,13.1791 c -0.159621,1.448731 0.04294,3.593772 0.494393,5.234616 0.240658,0.875072 -0.363843,0.608962 -0.796852,-0.350695 -0.305314,-0.677393 -0.39331,-1.541201 -0.386351,-3.799194 0.0044,-1.607357 0.08387,-3.238092 0.175981,-3.623853 0.162073,-0.679267 0.135068,-0.6668495 -0.852514,0.393299 -2.09302,2.246995 -2.195754,4.829017 -0.367936,9.245417 0.279941,0.676338 0.258659,0.864304 -0.203412,1.815997 -0.283628,0.583869 -0.947468,1.529852 -1.475015,2.102176 -1.052654,1.141899 -1.69031,2.873945 -0.902857,2.452574 0.75142,-0.402133 1.421399,-0.246601 2.108984,0.489666 0.918822,0.983407 0.883621,2.132943 -0.08803,2.893378 -0.686765,0.537646 -0.692903,0.562096 -0.416639,1.659723 0.154294,0.612717 0.742427,2.123514 1.30722,3.357335 1.130003,2.470049 1.515545,4.293167 1.5184,7.18176 0,1.428135 -0.120734,2.176304 -0.492763,3.016878 -0.372027,0.841537 -0.459202,1.374985 -0.351566,2.158573 0.164119,1.197669 1.021142,2.861813 1.473801,2.861813 0.169021,0 0.30736,0.121584 0.30736,0.270183 0,0.148595 0.268484,0.622035 0.596308,1.05208 0.629876,0.825871 1.610498,1.053223 2.162609,0.501353 z m -2.948411,-2.531436 c -0.598769,-0.642596 -1.091126,-2.313477 -0.774761,-2.629661 0.164941,-0.164941 0.317603,-0.0456 0.485399,0.379455 0.134652,0.341035 0.355255,0.899089 0.489907,1.24012 0.175575,0.443611 0.316771,0.548279 0.49727,0.367805 0.378166,-0.378037 0.04093,-1.356141 -0.745293,-2.160194 -0.3839,-0.392802 -0.69822,-0.783696 -0.69822,-0.868659 0,-0.08502 0.268079,-0.434384 0.595902,-0.776463 0.563567,-0.588314 0.603265,-0.797792 0.731779,-3.870444 0.151437,-3.630411 -0.218545,-6.888441 -1.220865,-10.745478 -0.675702,-2.6012 -0.659333,-2.439375 -0.249249,-2.439375 0.39782,0 1.190995,2.804741 1.818409,6.429421 0.334377,1.931886 0.432199,3.496466 0.392905,6.288307 -0.05037,3.561827 -0.07611,3.744777 -0.623322,4.394901 l -0.570942,0.678371 0.493582,0.525212 c 0.271351,0.288874 0.655251,0.941375 0.852525,1.450021 l 0.359335,0.924802 -0.111751,-0.910266 c -0.06139,-0.500647 -0.326598,-1.138678 -0.588538,-1.417846 -0.558654,-0.594516 -0.618409,-1.061946 -0.136282,-1.061946 0.414176,0 1.529451,1.836766 1.529451,2.518644 0,0.269655 -0.106804,0.771592 -0.237375,1.115412 -0.178859,0.470316 -0.311465,0.563875 -0.535743,0.3778 -0.219365,-0.181886 -0.373254,-0.126748 -0.582804,0.208378 -0.360977,0.578369 -0.61923,0.574329 -1.171342,-0.0183 z m 5.286182,0.0183 c -0.209147,-0.335126 -0.36344,-0.390259 -0.5824,-0.208378 -0.224279,0.186076 -0.356884,0.09251 -0.535744,-0.377798 -0.130964,-0.343813 -0.237779,-0.845746 -0.237779,-1.115401 0,-0.686336 1.116489,-2.518646 1.534769,-2.518646 0.299188,0 0.30246,-0.07166 0.02046,-0.526035 -0.548828,-0.892708 -0.50831,-7.192758 0.06791,-10.536688 0.609809,-3.537822 1.389064,-6.238252 1.800802,-6.238252 0.397808,0 0.414593,-0.156809 -0.259894,2.43937 -1.002311,3.857037 -1.372291,7.115068 -1.220866,10.745478 0.128514,3.072656 0.168212,3.282138 0.731791,3.870452 0.327822,0.342075 0.595901,0.691489 0.595901,0.776455 0,0.085 -0.314331,0.47587 -0.69822,0.868667 -0.785811,0.80405 -1.12346,1.782154 -0.745292,2.160195 0.180487,0.180466 0.321695,0.07581 0.49727,-0.367809 0.134652,-0.341033 0.355243,-0.89909 0.489895,-1.240121 0.167807,-0.425068 0.320469,-0.544396 0.485399,-0.379453 0.49972,0.499579 -0.707632,3.103682 -1.439005,3.103682 -0.122377,0 -0.350746,-0.205059 -0.507503,-0.455705 z m 0.558655,-3.215287 c 0.276667,-0.294518 0.434244,-0.604581 0.34952,-0.689014 -0.157565,-0.157791 -1.087439,0.886 -1.371066,1.538923 -0.08713,0.201429 -0.158802,0.629243 -0.158802,0.950714 0,0.466863 0.06836,0.398374 0.338884,-0.340306 0.186212,-0.508641 0.564794,-1.165784 0.841464,-1.460317 z M 44.449226,27.239552 c 0,-0.192887 0.108827,-0.35069 0.241883,-0.35069 0.133011,0 0.458787,-0.368232 0.724406,-0.818295 0.265628,-0.450054 0.577486,-0.818285 0.693318,-0.818285 0.420315,0 0.196857,0.915824 -0.394548,1.618636 -0.644605,0.766326 -1.265059,0.947073 -1.265059,0.368634 z m 9.957214,-0.368634 c -0.591394,-0.702812 -0.814447,-1.618636 -0.394537,-1.618636 0.115822,0 0.428107,0.368231 0.693308,0.818285 0.265617,0.450063 0.591809,0.818295 0.724831,0.818295 0.132595,0 0.241469,0.157803 0.241469,0.35069 0,0.578439 -0.620051,0.397692 -1.265071,-0.368634 z m -6.051105,-0.621192 c -0.05519,-0.09854 -0.174349,-0.494786 -0.264391,-0.880551 -0.0905,-0.385762 -0.485398,-1.104848 -0.877899,-1.597952 -0.474752,-0.596864 -0.6356,-0.974596 -0.48007,-1.130026 0.448557,-0.448637 2.158508,1.971812 2.158508,3.055561 0,0.485775 -0.363023,0.860424 -0.536148,0.552968 z m 3.023715,0.0093 c -0.272172,-0.272171 -0.15553,-1.013701 0.297534,-1.892812 0.626606,-1.215532 1.42059,-2.015715 1.711177,-1.725033 0.15553,0.15543 -0.0078,0.53427 -0.489491,1.133344 -0.397818,0.494919 -0.79195,1.242492 -0.875437,1.661259 -0.15798,0.789317 -0.385947,1.081027 -0.643783,0.823242 z m -6.211964,13.058211 c -0.178441,-1.458259 -0.449376,-2.383291 -1.032596,-3.520854 -0.774749,-1.512125 -1.706669,-4.071861 -1.857286,-5.10231 -0.04171,-0.286016 -0.160432,-0.601636 -0.263975,-0.701393 -0.103096,-0.09975 -0.136699,1.50196 -0.07365,3.559374 0.124422,4.086006 0.435471,5.543815 1.570386,7.364613 0.360572,0.578638 0.734646,1.315106 0.831231,1.636574 0.09657,0.32148 0.344607,0.809884 0.551291,1.085349 0.359752,0.480271 0.378167,0.442409 0.446105,-0.921288 0.03688,-0.782186 -0.03688,-2.312211 -0.171483,-3.400065 z m 10.614108,3.236004 c 0.09579,-0.321468 0.469434,-1.057936 0.830005,-1.636574 1.134916,-1.820798 1.44556,-3.278607 1.570387,-7.364613 0.06262,-2.057414 0.02866,-3.659127 -0.07409,-3.559374 -0.103095,0.09975 -0.222232,0.415377 -0.263987,0.701393 -0.1502,1.029073 -1.081704,3.589317 -1.854418,5.096751 -0.856201,1.670941 -1.232726,3.707753 -1.245418,6.7355 l -0.0078,1.726562 0.435469,-0.557567 c 0.239423,-0.306672 0.513641,-0.820598 0.609405,-1.142078 z M 43.410894,29.32638 c 0.437922,-0.355221 0.433425,-0.363487 -0.130559,-0.236994 -0.32128,0.0721 -0.669574,0.132494 -0.773524,0.134251 -0.103994,0.002 -0.124421,0.108412 -0.04463,0.236998 0.200545,0.32457 0.421552,0.293281 0.948695,-0.134255 z m 14.248046,0.134255 c 0.07937,-0.12859 0.05936,-0.235234 -0.04463,-0.236998 -0.103994,-0.002 -0.452244,-0.06212 -0.773939,-0.134251 -0.563973,-0.126493 -0.568481,-0.118227 -0.130549,0.236994 0.527142,0.427536 0.748553,0.458825 0.949099,0.134255 z M 43.252509,27.677458 c -0.640928,-0.682239 -1.375158,-0.734978 -1.375158,-0.09881 0,0.574342 0.574619,0.906268 1.321126,0.763525 l 0.575037,-0.10993 z m 14.990876,-0.09542 c 0,-0.643349 -0.733421,-0.587258 -1.384569,0.105895 l -0.531244,0.565256 0.548839,0.09008 c 0.759616,0.124689 1.366974,-0.213575 1.366974,-0.761238 z"
       id="path866"
       inkscape:transform-center-x="79.930685"
       inkscape:transform-center-y="-1.9055125" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer4"
     inkscape:label="NAPISY"
     sodipodi:insensitive="true">
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:12.6915px;line-height:1.25;font-family:'Arial Black';-inkscape-font-specification:'Arial Black, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.317288"
       x="14.212187"
       y="64.560631"
       id="text20030"
       transform="scale(0.92459648,1.0815529)"><tspan
         sodipodi:role="line"
         id="tspan20028"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:12.6915px;font-family:'Arial Black';-inkscape-font-specification:'Arial Black, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#ffffff;stroke-width:0.317288"
         x="14.212187"
         y="64.560631">LINY LU LU</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.87326px;line-height:1.25;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0.121832"
       x="28.420721"
       y="72.135254"
       id="text44282"
       transform="scale(0.90243425,1.108114)"><tspan
         sodipodi:role="line"
         id="tspan44280"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:4.87326px;font-family:Arial;-inkscape-font-specification:'Arial, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#ffffff;stroke-width:0.121832"
         x="28.420721"
         y="72.135254">HALTERY WODZE LINY</tspan></text>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
